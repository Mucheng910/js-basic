#include <stdio.h>
#define MAXSIZE 30
#define INFINITY 99999
typedef struct {
	int arcs[MAXSIZE][MAXSIZE];//存放的是边的信息 
	int vex[MAXSIZE];//存放的是顶点信息 
	int vexnum;//顶点数目 
	int arcnum;//边的数目 
}AdjMatrix;
void Create(AdjMatrix *chart);
void Print(AdjMatrix chart);
int index(AdjMatrix chart,int m);
void Floyd(AdjMatrix chart,int F[][MAXSIZE],int Path[][MAXSIZE]);
int main(){
	int F[MAXSIZE][MAXSIZE];
	int Path[MAXSIZE][MAXSIZE];
	int vex1,vex2;
	AdjMatrix chart; 
	Create(&chart);//建立邻接矩阵
	printf("邻接矩阵为:\n");
	Print(chart);//输出储存结果 
	Floyd(chart,F,Path);
    printf("请输入你要查询的最短路径对应的结点：");
	scanf ("%d%d",&vex1,&vex2);
	vex1 = index(chart,vex1);
	vex2 = index(chart,vex2);
	printf("最短路径长度为：%d",F[vex1][vex2]);	
	return 0;
} 
void Create(AdjMatrix *chart){
	int i,j,k,vex1,vex2,vex3;
    printf("请输入无向网中的顶点数和边数：");
	scanf("%d%d",&chart->vexnum,&chart->arcnum);
	for (i=0;i<=chart->vexnum;i++){
		for (j=0;j<chart->vexnum;j++)
			chart->arcs[i][j] = INFINITY;
        chart->arcs[i][i] = 0;
    }
	printf("\n请输入无向网中的%d个顶点:",chart->vexnum);
	for(i=0;i<chart->vexnum;i++){
	    printf("%NO.%d个顶点：\n",i+1);
	    scanf ("%d",&chart->vex[i]);
	}
	printf("请输入无向网中%d条边：\n",chart->arcnum);
	for (k=0;k<chart->arcnum;k++){
		printf("\nNO.%d条边、以及权值:",k+1);
		scanf ("%d%d%d",&vex1,&vex2,&vex3);
		vex1 = index(*chart,vex1);
		vex2 = index(*chart,vex2);
		chart->arcs[vex1][vex2] = vex3; 
	}
}	
void Print(AdjMatrix chart){
	int i,j,num = 0;
	for (i = 0;i < chart.vexnum;i++)
	   for (j = 0;j < chart.vexnum;j++){
	      num++;
	      printf("%-10d",chart.arcs[i][j]);
	      if(num%chart.vexnum == 0)
	          printf("\n"); 
       }
} 
int index(AdjMatrix chart,int m){
	int i;
	for(i =0 ;i<chart.vexnum;i++)
	    if (chart.vex[i] == m){
		   return i;
	   }

}
void Floyd(AdjMatrix chart,int F[][MAXSIZE],int Path[][MAXSIZE]){
	int count = 0;
	int i,j,k;
	for (i = 0;i<chart.vexnum;i++)
	   for (j = 0;j<chart.vexnum;j++){
	   	F[i][j] = chart.arcs[i][j];
	   }
	for (i = 0;i<chart.vexnum;i++)
	   for ( j = 0;j<chart.vexnum;j++)
	      for (k = 0;k<chart.vexnum;k++){
	      	if (F[i][j]>F[i][k]+F[k][j]){
	      		F[i][j] = F[i][k] + F[k][j];
	      		Path[i][j] = INFINITY;
			  }
		  }
	printf("最短路径的矩阵为：\n");
	for (i = 0;i<chart.vexnum;i++)
	  for ( j = 0;j<chart.vexnum;j++){
	        printf("%-10d",F[i][j]);
	        count++;
           if (count%chart.vexnum == 0){
             	printf("\n");
	       }	
     }
	  
}
